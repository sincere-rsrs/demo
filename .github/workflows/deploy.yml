name: Deploy to GitHub Pages

# 當推送到 main 分支時觸發此工作流程
on:
  push:
    branches:
      - main
      
  workflow_dispatch:

# 允許此工作流程寫入 GitHub Pages 的權限
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 步驟 1: 取得你的原始碼
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步驟 2: 替換 HTML 檔案中的預留位置
      # 它會找到 %%APPS_SCRIPT_URL%% 並用你設定的 Secret 替換它
      - name: Replace placeholder with secret URL
        run: |
          sed -i "s|%%APPS_SCRIPT_URL%%|${{ secrets.APPS_SCRIPT_URL }}|g" index.html
        # sed 的 -i 參數是直接修改檔案。
        # s|...|...|g 是替換語法，我們用 | 作為分隔符以避免 URL 中的 / 造成衝突。

      # 步驟 3: 設定 GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 步驟 4: 將包含真實 URL 的檔案打包成一個 artifact
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      
      # 步驟 5: 上傳 artifact 以便部署
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

      # 步驟 6: 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
