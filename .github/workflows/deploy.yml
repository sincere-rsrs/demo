name: Deploy to GitHub Pages

# 設定觸發條件
on:
  # 1. 當推送到 main 分支時觸發
  push:
    branches:
      - main
  
  # 2. 允許從 GitHub UI 手動觸發此工作流程
  workflow_dispatch:

# 允許此工作流程寫入 GitHub Pages 的權限
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 步驟 1: 取得你的原始碼
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步驟 2: 替換 HTML 檔案中的預留位置
      # 它會找到 %%APPS_SCRIPT_URL%% 並用你設定的 Secret 替換它
      - name: Replace placeholder with secret URL
        run: |
          sed -i "s|%%APPS_SCRIPT_URL%%|${{ secrets.APPS_SCRIPT_URL }}|g" index.html

      # 步驟 3: 設定 GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 步驟 4: 上傳修改後的網站檔案成品 (Artifact)
      # 這是關鍵的一步，直接將目前資料夾的內容打包
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # 上傳整個倉庫的根目錄
          path: '.'

      # 步驟 5: 從剛剛上傳的成品部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
